<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: OSGi | CodeAffectionado]]></title>
  <link href="http://www.codeaffectionado.com/blog/categories/osgi/atom.xml" rel="self"/>
  <link href="http://www.codeaffectionado.com/"/>
  <updated>2015-05-28T21:22:29-04:00</updated>
  <id>http://www.codeaffectionado.com/</id>
  <author>
    <name><![CDATA[jeff.downing@latchd.com]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[New Video: OSGi Services vs Service Factories]]></title>
    <link href="http://www.codeaffectionado.com/blog/2015/05/18/new-video-osgi-services-vs-service-factories/"/>
    <updated>2015-05-18T09:58:00-04:00</updated>
    <id>http://www.codeaffectionado.com/blog/2015/05/18/new-video-osgi-services-vs-service-factories</id>
    <content type="html"><![CDATA[<p>I just added a new video to the programmer vs world channel (sorry I still haven&rsquo;t set up the one for this site yet).
For some reason the phrase</p>

<blockquote><p>all bundles are singleton unless told otherwise</p></blockquote>

<p>wasn&rsquo;t reitereated enough for me when I first started, or maybe I just skimmed too much of the documentation. Either way,
I suffered great peril until I got my head around it and how to change that behaviour when you need to. The answer is much simplier than you might think.</p>

<iframe width="625" height="385" src="https://www.youtube.com/embed/MpQZTG7A3Dw" frameborder="0" allowfullscreen></iframe>


<br/><br/>


<p>I put the sample code from this video on <a href="https://github.com/PlasmaTrout/ca-servicefactory-demo">github</a> if you want to take a closer look at it and keep your eye on the <a href="https://www.youtube.com/channel/UCXUMchScrOIZYUa9_6wmFTg">PvW youTube Channel</a> for more.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[New OSGi Tutorial on Bndtools Posted]]></title>
    <link href="http://www.codeaffectionado.com/blog/2014/10/16/new-osgi-tutorial-posted/"/>
    <updated>2014-10-16T14:01:00-04:00</updated>
    <id>http://www.codeaffectionado.com/blog/2014/10/16/new-osgi-tutorial-posted</id>
    <content type="html"><![CDATA[<p>In a <a href="/labs-and-tutorials/osgi/apache-felix-scr-annotations">previous osgi tutorial</a> we built a project and tested it utilizing maven. While maven is easy for making simple bundles, it becomes difficult to manage when projects
have many bundles or when projects separate their API and Implementations frequently.</p>

<p>A product called Bndtools streamlines the building of OSGi components and provides a significant number of  tools that help in this arena. In this <a href="/labs-and-tutorials/osgi/apache-felix-maven-to-bndtools">new Bndtools tutorial</a> the original simple greeter service is going to be rebuilt from scratch as a Bndtools project.</p>

<p>The <a href="/labs-and-tutorials/osgi/">OSGi Tutorial Page</a> has been updated with this tutorial as well.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Newest OSGi Additions]]></title>
    <link href="http://www.codeaffectionado.com/blog/2013/08/19/newest-osgi-tutorial-additions/"/>
    <updated>2013-08-19T14:26:00-04:00</updated>
    <id>http://www.codeaffectionado.com/blog/2013/08/19/newest-osgi-tutorial-additions</id>
    <content type="html"><![CDATA[<p>The <a href="/labs-and-tutorials/osgi/">OSGi Tutorial Page</a> has been updated with a few new labs. Coming shortly we will finally have up our blueprint services lab, and we do have a quick Sling final lab that will exploit our basic bundle and add some HTTP capabilities.</p>
]]></content>
  </entry>
  
</feed>
